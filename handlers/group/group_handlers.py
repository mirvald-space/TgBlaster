from sqlite3 import IntegrityError

from config import callback_query, callback_message, user_sessions, New_Message, Query, bot, conn


@bot.on(Query(data=b"add_groups"))
async def manage_groups(event: callback_query) -> None:
    user_sessions[event.sender_id] = {"step": "awaiting_group_username"}
    await event.respond("üì≤ –ù–∞–ø–∏—à–∏—Ç–µ @username –≥—Ä—É–ø–ø—ã –∏–ª–∏ ID –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—ë –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:")


@bot.on(New_Message(func=lambda event: (user_state := user_sessions.pop(event.sender_id, None)) and user_state[
    "step"] == "awaiting_group_username"))
async def handle_group_input(event: callback_message) -> None:
    group_identifier: str = event.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–æ–¥ username –∏–ª–∏ ID
    if group_identifier.startswith("@") and " " not in group_identifier:
        # –≠—Ç–æ username –≥—Ä—É–ø–ø—ã
        cursor = conn.cursor()
        try:
            ids = await bot.get_entity(group_identifier)
            cursor.execute("INSERT INTO pre_groups (group_username, group_id) VALUES (?, ?)",
                           (group_identifier, ids.id))
            conn.commit()
            await event.respond(f"‚úÖ –ì—Ä—É–ø–ø–∞ {group_identifier} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
        except IntegrityError:
            await event.respond("‚ö† –≠—Ç–∞ –≥—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        except Exception as e:
            await event.respond(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã: {str(e)}")
        finally:
            cursor.close()
    elif group_identifier.isdigit():
        # –≠—Ç–æ ID –≥—Ä—É–ø–ø—ã
        cursor = conn.cursor()
        try:
            group_id = int(group_identifier)
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –≥—Ä—É–ø–ø
            cursor.execute("INSERT INTO pre_groups (group_username, group_id) VALUES (?, ?)",
                           (group_identifier, group_id))
            conn.commit()
            await event.respond(f"‚úÖ –ì—Ä—É–ø–ø–∞ —Å ID {group_identifier} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
        except IntegrityError:
            await event.respond("‚ö† –≠—Ç–∞ –≥—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        except Exception as e:
            await event.respond(f"‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã: {str(e)}")
        finally:
            cursor.close()
    else:
        await event.respond("‚ö† –û—à–∏–±–∫–∞! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ @username –≥—Ä—É–ø–ø—ã –∏–ª–∏ —á–∏—Å–ª–æ–≤–æ–π ID –≥—Ä—É–ø–ø—ã.")
