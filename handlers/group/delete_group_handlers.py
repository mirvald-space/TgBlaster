from config import user_sessions_deleting, callback_query, callback_message, Query, New_Message, bot, conn, processed_callbacks


@bot.on(Query(data=b"delete_group"))
async def handle_delete_group(event: callback_query) -> None:
    # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —ç—Ç–æ–≥–æ callback
    callback_id = f"{event.sender_id}:{event.query.msg_id}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω —ç—Ç–æ—Ç callback
    if callback_id in processed_callbacks:
        # –≠—Ç–æ—Ç callback —É–∂–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –±–µ–∑ –æ—Ç–≤–µ—Ç–∞
        return
        
    # –û—Ç–º–µ—á–∞–µ–º callback –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
    processed_callbacks[callback_id] = True
    
    user_sessions_deleting[event.sender_id] = {"step": "awaiting_group_username"}
    await event.respond("üì≤ –í–≤–µ–¥–∏—Ç–µ @username –≥—Ä—É–ø–ø—ã –∏–ª–∏ ID –≥—Ä—É–ø–ø—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:\n\nüîπ –ü—Ä–∏–º–µ—Ä username: @mygroup\nüîπ –ü—Ä–∏–º–µ—Ä ID: -1001234567890")


def is_awaiting_group_deletion(event):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""
    user_state = user_sessions_deleting.get(event.sender_id)
    return user_state and user_state.get("step") == "awaiting_group_username"


@bot.on(New_Message(func=is_awaiting_group_deletion))
async def handle_user_input(event: callback_message) -> None:
    group_input = event.text.strip()

    if group_input.startswith("@") or group_input.isdigit() or group_input.startswith("-"):
        cursor = conn.cursor()
        
        # –ü–æ–∏—Å–∫ –ø–æ username –∏–ª–∏ ID
        if group_input.startswith("@"):
            cursor.execute("SELECT * FROM groups WHERE group_username = ?", (group_input,))
        else:
            # –ü–æ–∏—Å–∫ –ø–æ ID (–º–æ–∂–µ—Ç –±—ã—Ç—å —á–∏—Å–ª–æ–≤–æ–π –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π)
            try:
                group_id = int(group_input)
                cursor.execute("SELECT * FROM groups WHERE group_id = ?", (group_id,))
            except ValueError:
                await event.respond("‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π @username –≥—Ä—É–ø–ø—ã –∏–ª–∏ ID –≥—Ä—É–ø–ø—ã.")
                return
        
        group = cursor.fetchone()

        if group:
            # –£–¥–∞–ª—è–µ–º –ø–æ —Ç–æ–º—É –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∏—Å–∫–∞–ª–∏
            if group_input.startswith("@"):
                cursor.execute("DELETE FROM groups WHERE group_username = ?", (group_input,))
                await event.respond(f"‚úÖ –ì—Ä—É–ø–ø–∞ {group_input} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
            else:
                group_id = int(group_input)
                cursor.execute("DELETE FROM groups WHERE group_id = ?", (group_id,))
                await event.respond(f"‚úÖ –ì—Ä—É–ø–ø–∞ —Å ID {group_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!")
            
            conn.commit()
        else:
            if group_input.startswith("@"):
                await event.respond(f"‚ö† –ì—Ä—É–ø–ø–∞ —Å –∏–º–µ–Ω–µ–º {group_input} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            else:
                await event.respond(f"‚ö† –ì—Ä—É–ø–ø–∞ —Å ID {group_input} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

        user_sessions_deleting.pop(event.sender_id, None)
        cursor.close()
    else:
        await event.respond("‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π @username –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä @mygroup) –∏–ª–∏ ID –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä -1001234567890).")
        return